# Render Infrastructure as Code - Mitopia Backend
# This file defines all services and databases for automatic deployment

services:
  # =============================================================================
  # API SERVICE - Core backend API
  # =============================================================================
  - type: web
    name: mitopia-api
    env: node
    region: oregon
    plan: free
    rootDir: ./api
    buildCommand: npm install && npx prisma generate && npx prisma migrate deploy && npm run build
    startCommand: npm start
    healthCheckPath: /health
    envVars:
      - key: NODE_ENV
        value: production
      - key: DATABASE_URL
        fromDatabase:
          name: mitopia-postgres
          property: connectionString
      - key: REDIS_URL
        fromDatabase:
          name: mitopia-redis
          property: connectionString
      - key: JWT_SECRET
        generateValue: true
      - key: LOG_LEVEL
        value: info
      - key: PORT
        value: 10000
      # Add these manually in Render dashboard:
      # OPENAI_API_KEY=sk-your-openai-api-key
      # STRIPE_SECRET_KEY=sk-your-stripe-secret-key
      # FRONTEND_URL=https://mitopia.netlify.app
      # CORS_ORIGINS=https://mitopia.netlify.app

  # =============================================================================
  # SIGNALING SERVICE - WebRTC signaling for video calls
  # =============================================================================
  - type: web
    name: mitopia-signaling
    env: node
    region: oregon
    plan: free
    rootDir: ./signaling
    buildCommand: npm install && npm run build
    startCommand: npm start
    healthCheckPath: /health
    envVars:
      - key: NODE_ENV
        value: production
      - key: REDIS_URL
        fromDatabase:
          name: mitopia-redis
          property: connectionString
      - key: API_SERVICE_URL
        value: https://mitopia-api.onrender.com
      - key: LOG_LEVEL
        value: info
      - key: PORT
        value: 10000

  # =============================================================================
  # BILLING SERVICE - Stripe integration and subscriptions
  # =============================================================================
  - type: web
    name: mitopia-billing
    env: node
    region: oregon
    plan: free
    rootDir: ./billing
    buildCommand: npm install && npm run build
    startCommand: npm start
    healthCheckPath: /health
    envVars:
      - key: NODE_ENV
        value: production
      - key: DATABASE_URL
        fromDatabase:
          name: mitopia-postgres
          property: connectionString
      - key: REDIS_URL
        fromDatabase:
          name: mitopia-redis
          property: connectionString
      - key: API_SERVICE_URL
        value: https://mitopia-api.onrender.com
      - key: LOG_LEVEL
        value: info
      - key: PORT
        value: 10000
      # Add these manually in Render dashboard:
      # STRIPE_SECRET_KEY=sk-your-stripe-secret-key
      # STRIPE_WEBHOOK_SECRET=whsec-your-webhook-secret

  # =============================================================================
  # STT SERVICE - Speech-to-text transcription
  # =============================================================================
  - type: web
    name: mitopia-stt
    env: python
    region: oregon
    plan: free
    rootDir: ./stt
    buildCommand: pip install -r requirements.txt
    startCommand: python main.py
    healthCheckPath: /health
    envVars:
      - key: REDIS_URL
        fromDatabase:
          name: mitopia-redis
          property: connectionString
      - key: API_SERVICE_URL
        value: https://mitopia-api.onrender.com
      - key: LOG_LEVEL
        value: info
      - key: PORT
        value: 10000
      # Add this manually in Render dashboard:
      # OPENAI_API_KEY=sk-your-openai-api-key

  # =============================================================================
  # TRANSLATION SERVICE - Real-time language translation
  # =============================================================================
  - type: web
    name: mitopia-translation
    env: python
    region: oregon
    plan: free
    rootDir: ./translation
    buildCommand: pip install -r requirements.txt
    startCommand: python main.py
    healthCheckPath: /health
    envVars:
      - key: REDIS_URL
        fromDatabase:
          name: mitopia-redis
          property: connectionString
      - key: API_SERVICE_URL
        value: https://mitopia-api.onrender.com
      - key: LOG_LEVEL
        value: info
      - key: PORT
        value: 10000
      # Add this manually in Render dashboard:
      # OPENAI_API_KEY=sk-your-openai-api-key

  # =============================================================================
  # NOTES SERVICE - AI-powered meeting summaries
  # =============================================================================
  - type: web
    name: mitopia-notes
    env: python
    region: oregon
    plan: free
    rootDir: ./notes
    buildCommand: pip install -r requirements.txt
    startCommand: python main.py
    healthCheckPath: /health
    envVars:
      - key: REDIS_URL
        fromDatabase:
          name: mitopia-redis
          property: connectionString
      - key: API_SERVICE_URL
        value: https://mitopia-api.onrender.com
      - key: LOG_LEVEL
        value: info
      - key: PORT
        value: 10000
      # Add this manually in Render dashboard:
      # OPENAI_API_KEY=sk-your-openai-api-key

# =============================================================================
# DATABASES
# =============================================================================
databases:
  # PostgreSQL Database
  - name: mitopia-postgres
    databaseName: mitopia_production
    user: mitopia_user
    plan: free
    region: oregon

  # Redis Cache
  - name: mitopia-redis
    plan: free
    region: oregon
    maxmemoryPolicy: allkeys-lru

# =============================================================================
# DEPLOYMENT INSTRUCTIONS
# =============================================================================

# Option 1: Deploy using this file
# 1. Commit this file to your repository
# 2. Go to Render dashboard
# 3. Click "New +" â†’ "Blueprint"
# 4. Connect your GitHub repository
# 5. Select this render.yaml file
# 6. Click "Apply"

# Option 2: Manual deployment
# Follow the step-by-step guide in RENDER_DEPLOYMENT.md

# =============================================================================
# MANUAL ENVIRONMENT VARIABLES
# =============================================================================

# After deployment, add these environment variables manually:

# For API Service:
# OPENAI_API_KEY=sk-your-openai-api-key
# STRIPE_SECRET_KEY=sk-your-stripe-secret-key
# FRONTEND_URL=https://mitopia.netlify.app
# CORS_ORIGINS=https://mitopia.netlify.app

# For Billing Service:
# STRIPE_SECRET_KEY=sk-your-stripe-secret-key
# STRIPE_WEBHOOK_SECRET=whsec-your-webhook-secret

# For AI Services (STT, Translation, Notes):
# OPENAI_API_KEY=sk-your-openai-api-key

# =============================================================================
# SERVICE URLS AFTER DEPLOYMENT
# =============================================================================

# Your services will be available at:
# API: https://mitopia-api.onrender.com
# Signaling: https://mitopia-signaling.onrender.com
# Billing: https://mitopia-billing.onrender.com
# STT: https://mitopia-stt.onrender.com
# Translation: https://mitopia-translation.onrender.com
# Notes: https://mitopia-notes.onrender.com

# =============================================================================
# HEALTH CHECKS
# =============================================================================

# Test these URLs after deployment:
# curl https://mitopia-api.onrender.com/health
# curl https://mitopia-signaling.onrender.com/health
# curl https://mitopia-billing.onrender.com/health
# curl https://mitopia-stt.onrender.com/health
# curl https://mitopia-translation.onrender.com/health
# curl https://mitopia-notes.onrender.com/health

# =============================================================================
# SCALING AND UPGRADES
# =============================================================================

# Free Tier Limits:
# - 750 hours/month per service (24/7 operation)
# - 512MB RAM per service
# - PostgreSQL: 1GB storage
# - Redis: 25MB storage

# To upgrade for production:
# 1. Change plan from "free" to "starter" ($7/month)
# 2. Increase resources as needed
# 3. Add custom domains
# 4. Enable auto-scaling
